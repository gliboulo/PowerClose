name: Build & Release Windows EXE (MSVC)

on:
  release:
    types: [published]          # runs when you Publish a release in the GUI
  push:
    tags:
      - "v*"                    # also runs when you push a tag like v1.0.0
  workflow_dispatch:            # manual run button (optional)

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Set up the Visual C++ build environment (same toolchain as "x64 Native Tools Prompt")
      - name: MSVC dev cmd
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Build EXE with cl (matches the working local command)
        shell: cmd
        run: |
          rem Compile all C files, wide-char Windows API, optimized, and link Windows libs
          rem If your entry file has a different name than main(), that's fine as long as one defines main/wWinMain.
          cl /nologo /O2 /W4 /utf-8 /DUNICODE /D_UNICODE /Fe:PowerClose.exe *.c ^
            user32.lib kernel32.lib shell32.lib ole32.lib uuid.lib

          if not exist PowerClose.exe (
            echo Build failed & exit /b 1
          )

          tar -a -c -f PowerClose_windows.zip PowerClose.exe

      - name: Upload artifact (for CI runs)
        uses: actions/upload-artifact@v4
        with:
          name: PowerClose_windows
          path: PowerClose_windows.zip

  release:
    needs: build
    runs-on: windows-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: PowerClose_windows
          path: .

      # If triggered by a tag push (v1.0.0, etc.), create/update that tag's release
      - name: Create/Update Release for tag
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: PowerClose_windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # If triggered by publishing a release in the GUI, attach to that release
      - name: Attach asset to published Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: PowerClose_windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
