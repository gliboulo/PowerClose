name: Build & Release Windows EXE (icon embedded)

on:
  release:
    types: [published]       # runs when you click “Publish release”
  push:
    tags:
      - "v*"                 # or when you push a tag like v1.0.0
  workflow_dispatch:

permissions:
  contents: write            # required to upload to Releases

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up MSYS2 (MinGW-w64)
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: >-
            base-devel
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-binutils

      - name: Build EXE (embed icon + link COM/Shell/UUID)
        shell: msys2 {0}
        run: |
          # RC -> COFF .res (64-bit PE)
          windres -O coff -F pe-x86-64 -i powerclose.rc -o appicon.res
          # Compile & link (remove -static if CRT issues)
          gcc -O2 -Wall -s -municode -o PowerClose.exe *.c appicon.res \
              -luser32 -lkernel32 -lole32 -lshell32 -luuid

      - name: Upload artifact (EXE)
        uses: actions/upload-artifact@v4
        with:
          name: PowerClose.exe
          path: PowerClose.exe

  release:
    needs: build
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # gh CLI auth
    steps:
      - name: Download built EXE
        uses: actions/download-artifact@v4
        with:
          name: PowerClose.exe
          path: .

      # Tag-push path: ensure a release exists, then upload (PowerShell syntax)
      - name: Create release if missing (tag push)
        if: startsWith(github.ref, 'refs/tags/')
        shell: pwsh
        run: |
          $tag = "${{ github.ref_name }}"
          $repo = "${{ github.repository }}"
          if (-not (gh release view $tag --repo $repo *> $null)) {
            gh release create $tag --title $tag --notes "Automated build" --repo $repo
          }
          gh release upload $tag PowerClose.exe --clobber --repo $repo

      # GUI-publish path: upload EXE to that release (PowerShell syntax)
      - name: Upload to published release (GUI)
        if: github.event_name == 'release'
        shell: pwsh
        run: |
          $tag = "${{ github.event.release.tag_name }}"
          $repo = "${{ github.repository }}"
          gh release upload $tag PowerClose.exe --clobber --repo $repo
