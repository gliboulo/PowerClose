name: Build & Release Windows EXE (MinGW)

on:
  release:
    types: [published]       # when you publish a Release in the GUI
  push:
    tags:
      - "v*"                 # or when you push a tag like v1.0.0
  workflow_dispatch:

permissions:
  contents: write            # <-- needed to create/update releases & upload assets

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up MSYS2 (MinGW-w64)
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: >-
            base-devel
            mingw-w64-x86_64-gcc
            zip

      - name: Build .exe (COM + Shell + UUID)
        shell: msys2 {0}
        run: |
          gcc -O2 -Wall -s -municode -static -o PowerClose.exe *.c \
              -luser32 -lkernel32 -lole32 -lshell32 -luuid
          zip PowerClose_windows.zip PowerClose.exe

      - name: Upload artifact (for CI runs)
        uses: actions/upload-artifact@v4
        with:
          name: PowerClose_windows
          path: PowerClose_windows.zip

  release:
    needs: build
    runs-on: windows-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: PowerClose_windows
          path: .

      # If triggered by a tag push, create/update the tag's release
      - name: Create/Update Release for tag
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          files: PowerClose_windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # If triggered by publishing a release in the GUI, attach to that release
      - name: Attach asset to published Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: PowerClose_windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
